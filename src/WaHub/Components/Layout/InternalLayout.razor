
@inject NavigationService Navigation
@inject LocalizationService Localization

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            @if (!Navigation.IsExternalRoute(Navigation.GetCurrentPath()))
            {
                <div class="internal-layout">
                    <MobileNavToggle />
                    <div class="sidebar-overlay"></div>
                    <div class="sidebar-container">
                        <WaHubSidebar />
                    </div>
                    <div class="main-content">
                        <div class="language-switcher-container">
                            <div class="language-switcher">
                                <select @onchange="OnLanguageChanged" value="@Localization.CurrentLanguage" class="language-select">
                                    <option value="es">🇪🇸 Español</option>
                                    <option value="en">🇺🇸 English</option>
                                </select>
                            </div>
                        </div>
                        <div class="content">
                            @ChildContent
                        </div>
                    </div>
                </div>
            }
            else
            {
                <HomeNavbar />
                @ChildContent
            }
        </Authorized>
        <NotAuthorized>
            @if (!Navigation.IsExternalRoute(Navigation.GetCurrentPath()))
            {
                <RedirectToLogin />
            }
            else
            {
                <HomeNavbar />
                <div>@ChildContent</div>
            }
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private async Task OnLanguageChanged(ChangeEventArgs e)
    {
        var selectedLanguage = e.Value?.ToString() ?? "es";
        await Localization.SetLanguageAsync(selectedLanguage);
        StateHasChanged();
    }
}

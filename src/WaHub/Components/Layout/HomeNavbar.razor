<nav class="home-navbar">
    <div class="navbar-content">
        <div class="logo-section">
            <a href="/" class="logo-link">
                <img src="/logo-wahub.png" alt="WaHub Logo" class="logo" />
                <span class="app-name">WaHub</span>
            </a>
        </div>
        <div class="nav-actions">
            <nav class="nav-menu">
                <a href="/pricing">Precios</a>
                <a href="/docs">API</a>
                <a href="/contact">Contacto</a>
            </nav>
            
            <div class="theme-switcher">
                <ThemeToggle />
                @* <button class="theme-toggle-btn" onclick="window.waHubApp.theme.toggle()">
                    <span id="theme-toggle-icon">üåô</span>
                </button> *@
            </div>

            <a class="nav-btn nav-btn-primary" href="/Account/login">Iniciar Sesi√≥n</a>
            <a class="nav-btn nav-btn-primary" href="/Account/register">Registrarse</a>
        </div>
    </div>
</nav>

@* <style>
    .theme-switcher {
        display: flex;
        align-items: center;
        margin: 0 0.5rem;
    }

    .theme-toggle-btn {
        background: none;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 0.375rem;
        transition: background-color 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        color: inherit;
    }

    .theme-toggle-btn:hover {
        background-color: rgba(0, 0, 0, 0.1);
    }

    [data-theme="dark"] .theme-toggle-btn:hover {
        background-color: rgba(255, 255, 255, 0.1);
    }
</style>

<script>
    // Actualizar el icono del tema cuando cambie
    document.addEventListener('DOMContentLoaded', function() {
        function updateThemeIcon() {
            const icon = document.getElementById('theme-toggle-icon');
            if (icon) {
                const currentTheme = document.documentElement.getAttribute('data-theme');
                icon.textContent = currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
            }
        }
        
        // Actualizar inicialmente
        updateThemeIcon();
        
        // Observar cambios en data-theme
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.type === 'attributes' && mutation.attributeName === 'data-theme') {
                    updateThemeIcon();
                }
            });
        });
        
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ['data-theme']
        });
    });
</script> *@

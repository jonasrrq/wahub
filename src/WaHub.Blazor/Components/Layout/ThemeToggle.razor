@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<button class="theme-toggle" @onclick="ToggleTheme">
    @if (isDarkMode)
    {
        <span>‚òÄÔ∏è</span>
    }
    else
    {
        <span>üåô</span>
    }
</button>

@code {
    private bool isDarkMode = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                // Initialize theme and get current state
                await JSRuntime.InvokeVoidAsync("eval", "window.waHubApp.theme.init()");
                var currentTheme = await JSRuntime.InvokeAsync<string>("eval", "window.waHubApp.theme.current");
                isDarkMode = currentTheme == "dark";
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error initializing theme: {ex.Message}");
            }
        }
    }

    private async Task ToggleTheme()
    {
        try
        {
            var newTheme = await JSRuntime.InvokeAsync<string>("toggleTheme");
            isDarkMode = newTheme == "dark";
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error toggling theme: {ex.Message}");
            // Fallback: toggle locally
            isDarkMode = !isDarkMode;
            StateHasChanged();
        }
    }
}
